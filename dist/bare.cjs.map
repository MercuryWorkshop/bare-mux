{"version":3,"file":"bare.cjs","sources":["../src/BareTypes.ts","../src/snapshot.ts","../src/Switcher.ts","../src/webSocket.ts","../src/BareClient.ts"],"sourcesContent":["export type BareHeaders = Record<string, string | string[]>;\n\nexport type BareMeta =\n  {\n    // ???\n  };\n\nexport type TransferrableResponse =\n  {\n    body: ReadableStream | ArrayBuffer | Blob | string,\n    headers: BareHeaders,\n    status: number,\n    statusText: string\n  }\n\nexport interface BareTransport {\n  init: () => Promise<void>;\n  ready: boolean;\n  connect: (\n    url: URL,\n    origin: string,\n    protocols: string[],\n    requestHeaders: BareHeaders,\n    onopen: (protocol: string) => void,\n    onmessage: (data: Blob | ArrayBuffer | string) => void,\n    onclose: (code: number, reason: string) => void,\n    onerror: (error: string) => void,\n  ) => (data: Blob | ArrayBuffer | string) => void;\n\n  request: (\n    remote: URL,\n    method: string,\n    body: BodyInit | null,\n    headers: BareHeaders,\n    signal: AbortSignal | undefined\n  ) => Promise<TransferrableResponse>;\n\n  meta: () => BareMeta\n}\nexport interface BareWebSocketMeta {\n  protocol: string;\n  setCookies: string[];\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport const maxRedirects = 20;\n\n\n","// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n\nexport const WebSocketFields = {\n  prototype: {\n    send: WebSocket.prototype.send,\n  },\n  CLOSED: WebSocket.CLOSED,\n  CLOSING: WebSocket.CLOSING,\n  CONNECTING: WebSocket.CONNECTING,\n  OPEN: WebSocket.OPEN,\n};\n","import { BareTransport } from \"./BareTypes\";\n\nself.BCC_VERSION = \"3.0.2\";\nconsole.warn(\"BCC_VERSION: \" + self.BCC_VERSION);\n\ndeclare global {\n  interface ServiceWorkerGlobalScope {\n    gSwitcher: Switcher;\n    BCC_VERSION: string;\n    BCC_DEBUG: boolean;\n  }\n  interface WorkerGlobalScope {\n    gSwitcher: Switcher;\n    BCC_VERSION: string;\n    BCC_DEBUG: boolean;\n  }\n  interface Window {\n    gSwitcher: Switcher;\n    BCC_VERSION: string;\n    BCC_DEBUG: boolean;\n  }\n}\n\nclass Switcher {\n  active: BareTransport | null = null;\n\n  channel = new BroadcastChannel(\"bare-mux\");\n\n  constructor() {\n    this.channel.addEventListener(\"message\", ({ data: { type, data } }) => {\n      console.log(type, data, \"ServiceWorker\" in globalThis);\n      switch (type) {\n        case \"setremote\":\n          // this.active = new RemoteClient\n          break;\n        case \"set\":\n          const { name, config } = data;\n          this.active = new ((0, eval)(name))(...config);\n          break;\n      }\n    });\n  }\n}\n\nexport function findSwitcher(): Switcher {\n  if (globalThis.gSwitcher) return globalThis.gSwitcher;\n  if (\"ServiceWorkerGlobalScope\" in globalThis) {\n    globalThis.gSwitcher = new Switcher;\n    return globalThis.gSwitcher;\n  }\n\n  let _parent: any = window;\n  for (let i = 0; i < 20; i++) {\n    try {\n      if (_parent == _parent.parent) {\n        globalThis.gSwitcher = new Switcher;\n        return globalThis.gSwitcher;\n      }\n      _parent = _parent.parent;\n\n      if (_parent && _parent[\"gSwitcher\"]) {\n        console.warn(\"found implementation on parent\");\n        globalThis.gSwitcher = _parent[\"gSwitcher\"];\n        return _parent[\"gSwitcher\"];\n      }\n    } catch (e) {\n      globalThis.gSwitcher = new Switcher;\n      return globalThis.gSwitcher;\n    }\n  }\n\n  throw \"unreachable\";\n}\nfindSwitcher();\n\nexport function SetTransport(name: string, ...config: any[]) {\n  let switcher = findSwitcher();\n  switcher.active = new ((0, eval)(name))(...config);\n  switcher.channel.postMessage({ type: \"set\", data: { name, config } });\n}\n\nexport function SetSingletonTransport(client: BareTransport) {\n  let switcher = findSwitcher();\n  switcher.active = client;\n  switcher.channel.postMessage({ type: \"setremote\" });\n}\n","/*\n * WebSocket helpers\n */\n\nconst validChars =\n  \"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\n\nexport function validProtocol(protocol: string): boolean {\n  for (let i = 0; i < protocol.length; i++) {\n    const char = protocol[i];\n\n    if (!validChars.includes(char)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { BareHeaders, maxRedirects } from './BareTypes';\nimport { findSwitcher } from './Switcher';\nimport { WebSocketFields } from './snapshot.js';\nimport { validProtocol } from './webSocket';\n\n\n// get the unhooked value\nconst getRealReadyState = Object.getOwnPropertyDescriptor(\n  WebSocket.prototype,\n  'readyState'\n)!.get!;\n\nconst wsProtocols = ['ws:', 'wss:'];\nconst statusEmpty = [101, 204, 205, 304];\n\nconst statusRedirect = [301, 302, 303, 307, 308];\n\nexport type WebSocketImpl = {\n  new(...args: ConstructorParameters<typeof WebSocket>): WebSocket;\n};\n\nexport namespace BareWebSocket {\n  export type GetReadyStateCallback = () => number;\n  export type GetSendErrorCallback = () => Error | undefined;\n  export type GetProtocolCallback = () => string;\n  export type HeadersType = BareHeaders | Headers | undefined;\n  export type HeadersProvider =\n    | BareHeaders\n    | (() => BareHeaders | Promise<BareHeaders>);\n\n  export interface Options {\n    /**\n     * A provider of request headers to pass to the remote.\n     * Usually one of `User-Agent`, `Origin`, and `Cookie`\n     * Can be just the headers object or an synchronous/asynchronous function that returns the headers object\n     */\n    headers?: BareWebSocket.HeadersProvider;\n    /**\n     * A hook executed by this function with helper arguments for hooking the readyState property. If a hook isn't provided, bare-client will hook the property on the instance. Hooking it on an instance basis is good for small projects, but ideally the class should be hooked by the user of bare-client.\n     */\n    readyStateHook?:\n    | ((\n      socket: WebSocket,\n      getReadyState: BareWebSocket.GetReadyStateCallback\n    ) => void)\n    | undefined;\n    /**\n     * A hook executed by this function with helper arguments for determining if the send function should throw an error. If a hook isn't provided, bare-client will hook the function on the instance.\n     */\n    sendErrorHook?:\n    | ((\n      socket: WebSocket,\n      getSendError: BareWebSocket.GetSendErrorCallback\n    ) => void)\n    | undefined;\n    /**\n     * A hook executed by this function with the URL. If a hook isn't provided, bare-client will hook the URL.\n     */\n    urlHook?: ((socket: WebSocket, url: URL) => void) | undefined;\n    /**\n     * A hook executed by this function with a helper for getting the current fake protocol. If a hook isn't provided, bare-client will hook the protocol.\n     */\n    protocolHook?:\n    | ((\n      socket: WebSocket,\n      getProtocol: BareWebSocket.GetProtocolCallback\n    ) => void)\n    | undefined;\n    /**\n     * A callback executed by this function with an array of cookies. This is called once the metadata from the server is received.\n     */\n    setCookiesCallback?: ((setCookies: string[]) => void) | undefined;\n    webSocketImpl?: WebSocket;\n  }\n}\n\n/**\n * A Response with additional properties.\n */\nexport interface BareResponse extends Response {\n  rawResponse: Response;\n  rawHeaders: BareHeaders;\n}\n/**\n * A BareResponse with additional properties.\n */\nexport interface BareResponseFetch extends BareResponse {\n  finalURL: string;\n}\nexport class BareClient {\n\n  /**\n   * Create a BareClient. Calls to fetch and connect will wait for an implementation to be ready.\n   */\n  constructor() { }\n\n  createWebSocket(\n    remote: string | URL,\n    protocols: string | string[] | undefined = [],\n    webSocketImpl: WebSocketImpl,\n    requestHeaders: BareHeaders,\n  ): WebSocket {\n    let switcher = findSwitcher();\n    let client = switcher.active;\n    if (!client) throw \"invalid switcher\";\n\n    if (!client.ready)\n      throw new TypeError(\n        'You need to wait for the client to finish fetching the manifest before creating any WebSockets. Try caching the manifest data before making this request.'\n      );\n\n    try {\n      remote = new URL(remote);\n    } catch (err) {\n      throw new DOMException(\n        `Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`\n      );\n    }\n\n    if (!wsProtocols.includes(remote.protocol))\n      throw new DOMException(\n        `Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`\n      );\n\n    if (!Array.isArray(protocols)) protocols = [protocols];\n\n    protocols = protocols.map(String);\n\n    for (const proto of protocols)\n      if (!validProtocol(proto))\n        throw new DOMException(\n          `Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n        );\n\n\n    let wsImpl = (webSocketImpl || WebSocket) as WebSocketImpl;\n    const socket = new wsImpl(\"wss:null\", protocols);\n\n    let fakeProtocol = '';\n\n    let fakeReadyState: number = WebSocketFields.CONNECTING;\n\n    let initialErrorHappened = false;\n    socket.addEventListener(\"error\", (e) => {\n      if (!initialErrorHappened) {\n        fakeReadyState = WebSocket.CONNECTING;\n        e.stopImmediatePropagation();\n        initialErrorHappened = true;\n      }\n    });\n    let initialOnErrorHappenned = false;\n    // TODO socket onerror will be broken\n\n    requestHeaders['Host'] = (new URL(remote)).host;\n    // requestHeaders['Origin'] = origin;\n    requestHeaders['Pragma'] = 'no-cache';\n    requestHeaders['Cache-Control'] = 'no-cache';\n    requestHeaders['Upgrade'] = 'websocket';\n    // requestHeaders['User-Agent'] = navigator.userAgent;\n    requestHeaders['Connection'] = 'Upgrade';\n    const sendData = client.connect(\n      remote,\n      origin,\n      protocols,\n      requestHeaders,\n      (protocol: string) => {\n        fakeReadyState = WebSocketFields.OPEN;\n        fakeProtocol = protocol;\n\n        (socket as any).meta = {\n          headers: {\n            \"sec-websocket-protocol\": protocol,\n          }\n        }; // what the fuck is a meta\n        socket.dispatchEvent(new Event(\"open\"));\n      },\n      (payload) => {\n        console.log(payload);\n        if ((payload as any).data) {\n          socket.dispatchEvent(new MessageEvent(\"message\", { data: (payload as any).data }));\n          return;\n        }\n        socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n        // if (typeof payload === \"string\") {\n        // } else if (payload instanceof ArrayBuffer) {\n        //   Object.setPrototypeOf(payload, ArrayBuffer);\n        //\n        //   socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n        // } else if (payload instanceof Blob) {\n        // }\n      },\n      (code, reason) => {\n        fakeReadyState = WebSocketFields.CLOSED;\n        socket.dispatchEvent(new CloseEvent(\"close\", { code, reason }));\n      },\n      () => {\n        fakeReadyState = WebSocketFields.CLOSED;\n      },\n    )\n\n    // const socket = this.client.connect(\n    //   remote,\n    //   protocols,\n    //   async () => {\n    //     const resolvedHeaders =\n    //       typeof options.headers === 'function'\n    //         ? await options.headers()\n    //         : options.headers || {};\n    //\n    //     const requestHeaders: BareHeaders =\n    //       resolvedHeaders instanceof Headers\n    //         ? Object.fromEntries(resolvedHeaders)\n    //         : resolvedHeaders;\n    //\n    //     // user is expected to specify user-agent and origin\n    //     // both are in spec\n    //\n    //\n    //     return requestHeaders;\n    //   },\n    //   (meta) => {\n    //     fakeProtocol = meta.protocol;\n    //     if (options.setCookiesCallback)\n    //       options.setCookiesCallback(meta.setCookies);\n    //   },\n    //   (readyState) => {\n    //     fakeReadyState = readyState;\n    //   },\n    //   options.webSocketImpl || WebSocket\n    // );\n\n    // protocol is always an empty before connecting\n    // updated when we receive the metadata\n    // this value doesn't change when it's CLOSING or CLOSED etc\n    const getReadyState = () => {\n      const realReadyState = getRealReadyState.call(socket);\n      // readyState should only be faked when the real readyState is OPEN\n      return realReadyState === WebSocketFields.OPEN\n        ? fakeReadyState\n        : realReadyState;\n    };\n\n    // we have to hook .readyState ourselves\n\n    Object.defineProperty(socket, 'readyState', {\n      get: getReadyState,\n      configurable: true,\n      enumerable: true,\n    });\n\n    /**\n     * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\n     */\n    const getSendError = () => {\n      const readyState = getReadyState();\n\n      if (readyState === WebSocketFields.CONNECTING)\n        return new DOMException(\n          \"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\"\n        );\n    };\n\n    // we have to hook .send ourselves\n    // use ...args to avoid giving the number of args a quantity\n    // no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\n    socket.send = function(...args) {\n      const error = getSendError();\n\n      if (error) throw error;\n      sendData(args[0] as any);\n    };\n\n    Object.defineProperty(socket, 'url', {\n      get: () => remote.toString(),\n      configurable: true,\n      enumerable: true,\n    });\n\n    const getProtocol = () => fakeProtocol;\n\n    Object.defineProperty(socket, 'protocol', {\n      get: getProtocol,\n      configurable: true,\n      enumerable: true,\n    });\n\n    return socket;\n  }\n\n  async fetch(\n    url: string | URL,\n    init?: RequestInit\n  ): Promise<BareResponseFetch> {\n    // Only create an instance of Request to parse certain parameters of init such as method, headers, redirect\n    // But use init values whenever possible\n    const req = new Request(url, init);\n\n\n    // try to use init.headers because it may contain capitalized headers\n    // furthermore, important headers on the Request class are blocked...\n    // we should try to preserve the capitalization due to quirks with earlier servers\n    const inputHeaders = init?.headers || req.headers;\n\n    const headers: BareHeaders =\n      inputHeaders instanceof Headers\n        ? Object.fromEntries(inputHeaders)\n        : (inputHeaders as BareHeaders);\n\n\n    const body = init?.body || req.body;\n\n    let urlO = new URL(req.url);\n\n    if (urlO.protocol.startsWith('blob:')) {\n      const response = await fetch(urlO);\n      const result: Response & Partial<BareResponse> = new Response(\n        response.body,\n        response\n      );\n\n      result.rawHeaders = Object.fromEntries(response.headers);\n      result.rawResponse = response;\n\n      return result as BareResponseFetch;\n    }\n\n    let switcher = findSwitcher();\n    if (!switcher.active) throw \"there are no bare clients\";\n    const client = switcher.active;\n    if (!client.ready) await client.init();\n\n    for (let i = 0; ; i++) {\n      if ('host' in headers) headers.host = urlO.host;\n      else headers.Host = urlO.host;\n\n\n      let resp = await client.request(\n        urlO,\n        req.method,\n        body,\n        headers,\n        req.signal\n      );\n\n      let responseobj: BareResponse & Partial<BareResponseFetch> = new Response(\n        statusEmpty.includes(resp.status) ? undefined : resp.body, {\n        headers: new Headers(resp.headers as HeadersInit),\n        status: resp.status,\n        statusText: resp.statusText,\n      }) as BareResponse;\n      responseobj.rawHeaders = resp.headers;\n      responseobj.rawResponse = new Response(resp.body);\n\n\n      responseobj.finalURL = urlO.toString();\n\n      const redirect = init?.redirect || req.redirect;\n\n      if (statusRedirect.includes(responseobj.status)) {\n        switch (redirect) {\n          case 'follow': {\n            const location = responseobj.headers.get('location');\n            if (maxRedirects > i && location !== null) {\n              urlO = new URL(location, urlO);\n              continue;\n            } else throw new TypeError('Failed to fetch');\n          }\n          case 'error':\n            throw new TypeError('Failed to fetch');\n          case 'manual':\n            return responseobj as BareResponseFetch;\n        }\n      } else {\n        return responseobj as BareResponseFetch;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}